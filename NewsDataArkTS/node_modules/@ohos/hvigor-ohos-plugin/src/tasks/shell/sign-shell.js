"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignShell=void 0;const path_1=__importDefault(require("path")),sign_type_enum_js_1=require("../../enum/sign-type-enum.js"),runtime_type_enum_js_1=require("../../enum/runtime-type-enum.js"),task_names_js_1=require("../common/task-names.js"),pack_shell_js_1=require("./pack-shell.js"),validate_sign_js_1=require("../validate-sign.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),sign_model_js_1=require("../sign/command-builder-impl/sign-model.js"),base_sign_js_1=require("../base-sign.js");var ShellTask=task_names_js_1.TaskNames.ShellTask;class SignShell extends base_sign_js_1.BaseSign{constructor(e){super(e,ShellTask.SIGN_SHELL,sign_type_enum_js_1.SignTypeEnum.SHELL),this._log=ohos_logger_js_1.OhosLogger.getLogger(SignShell.name),this.signCutShellSignModels=[],this.initSignCutShellSignModel(this.targetData)}declareInputFiles(){const e=super.declareInputFiles();for(const t of this.signCutShellSignModels)e.addEntry(t.getInputFilePath(),{isDirectory:!1});return e}declareOutputFiles(){const e=super.declareOutputFiles();for(const t of this.signCutShellSignModels)t.getOutPutFilePath()&&e.addEntry(t.getOutPutFilePath(),{isDirectory:!1});return e}initTaskDepends(){this.module.registryDependsOnTask(this,new pack_shell_js_1.PackShell(this.targetService),new validate_sign_js_1.ValidateSigning(this.targetService));for(const e of this.service.getRelatedEntryModules()){const t=this.module.findModuleByName(e),s=this.targetService.buildTaskName(ShellTask.PACK_SHELL).name;t&&t.getTaskByName(s)&&this.dependsOn(s,t.getName())}}taskShouldDo(e){return e.getTargetStatus().is(runtime_type_enum_js_1.RuntimeTypeEnum.HARMONY_OS)}doTaskAction(e){const t=e.getPathInfo(),s=path_1.default.resolve(t.getIntermediatesApkDir(),e.getApkName());this.signUtil.sign(new sign_model_js_1.SignModel(sign_type_enum_js_1.SignTypeEnum.SHELL,s,s)),this.signCutShell()}initSignCutShellSignModel(e){if("ohosTest"===e.getTargetName())return;const t=e.getPathInfo();for(const s of this.service.getRelatedEntryModules()){const i=e.findTargetDataByName(s);void 0===i&&this._log._buildError(`Unable to find '${e.getTargetName()}' in module ${s}. Make sure module ${this.moduleName} has the same target as ${s}.`)._printErrorAndExit(this.moduleName);const n=path_1.default.resolve(i.getPathInfo().getIntermediatesApkDir(),i.getApkName(!0)),l=path_1.default.resolve(t.getIntermediatesApkDir(),i.getApkName(!0));this.signCutShellSignModels.push(new sign_model_js_1.SignModel(this.signType,n,l))}}signCutShell(){for(const e of this.signCutShellSignModels)this.signUtil.sign(e)}}exports.SignShell=SignShell;