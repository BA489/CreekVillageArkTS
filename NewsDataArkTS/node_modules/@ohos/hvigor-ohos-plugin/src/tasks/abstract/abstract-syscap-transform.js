"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractSyscapTransform=void 0;const ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),ohos_hap_task_js_1=require("../task/ohos-hap-task.js"),path_1=__importDefault(require("path")),common_const_js_1=require("../../const/common-const.js"),fs_1=__importDefault(require("fs")),project_file_reader_js_1=require("../../utils/project-file-reader.js"),lodash_1=require("lodash"),array_util_js_1=require("../../utils/array-util.js"),file_util_js_1=require("../../utils/file-util.js"),process_utils_js_1=require("../../utils/process-utils.js"),file_set_js_1=require("@ohos/hvigor-base/src/internal/snapshot/util/file-set.js"),fs_extra_1=__importDefault(require("fs-extra"));class AbstractSyscapTransform extends ohos_hap_task_js_1.OhosHapTask{constructor(e,s){var t;super(e,s),this._log=ohos_logger_js_1.OhosLogger.getLogger(AbstractSyscapTransform.name);const o=e.getTargetData().getTargetName();this.hapExtraInfo=this.service.getHapExtraInfo(),this.sourceRoot=null===(t=this.service.getModuleModel())||void 0===t?void 0:t.getSourceRootByTargetName(o),this.pathInfo=this.targetService.getTargetData().getPathInfo(),this.syscapJsonPath=path_1.default.resolve(this.sourceRoot,common_const_js_1.CommonConst.SYSCAP_JSON);const i=this.service.getSdkInfo();this.syscapTool=i.getSysCapTool(),this.requireSyscapPath=fs_1.default.existsSync(i.getSdkJsDir())&&!fs_1.default.existsSync(i.getSdkEtsDir())?i.getSysCapFileInJs():i.getSysCapFileInEts(),this.rpcidScPath=path_1.default.resolve(this.pathInfo.getIntermediatesSysCap(),common_const_js_1.CommonConst.RPCID_SC)}declareInputFiles(){const e=(new file_set_js_1.FileSet).addEntry(this.syscapTool).addEntry(this.requireSyscapPath);return fs_1.default.existsSync(path_1.default.resolve(this.sourceRoot,common_const_js_1.CommonConst.SYSCAP_JSON))&&e.addEntry(this.syscapJsonPath),e}declareOutputFiles(){return(new file_set_js_1.FileSet).addEntry(this.rpcidScPath)}initTaskDepends(){}doTaskAction(e){var s;const t=/^SystemCapability(\.[a-zA-Z0-9]+){2,3}$/,o=this.getJsonProfileByModel(),i=project_file_reader_js_1.ProjectFileReader.getJson5Obj(this.syscapJsonPath),r=i.devices,a=r.general,n=r.custom,c=new Set,l=[];let _=new Set;if(0===o.deviceTypes.length){if(void 0!==a&&0!==a.length){const e=`The value of 'general' in the syscap.json file must be the same as that of '${o.deviceConfig}' in the ${o.configurationProfile} file.`,s=`Please check whether the general field in the syscap.json file and the ${o.deviceConfig} field in the ${o.configurationProfile} \n          are the same.`;this._log._buildError(e)._solution(s)._file(this.syscapJsonPath)._printErrorAndExit()}_=this.intersectNDeviceSysCap(n,l,t,this.syscapJsonPath)}else{if(void 0===a||!(0,array_util_js_1.checkArrayElementIsSame)(a,o.deviceTypes)){const e="Unable to find the 'general' field or its value is invalid.",s=`Make sure the 'general' field is contained in the syscap.json file and its value must be the same as the value of '${o.deviceConfig}' in the ${o.configurationProfile} file.`;this._log._buildError(e)._solution(s)._file(this.syscapJsonPath)._printErrorAndExit()}if(a.forEach((e=>{this.getRequireSysCapList(this.requireSyscapPath,e,c)})),void 0!==n){this.intersectNDeviceSysCap(n,l,t,this.syscapJsonPath).forEach((e=>{c.has(e)&&_.add(e)}))}}if(this.moduleModel.isHarModule())return;if(this.addOrRemoveSyscapByProduction(i,t,_,common_const_js_1.CommonConst.ADDED_SYSCAPS),this.addOrRemoveSyscapByProduction(i,t,_,common_const_js_1.CommonConst.REMOVED_SYSCAPS),0===_.size)return;const h=new Map,d=null===(s=this.service.getModuleModel())||void 0===s?void 0:s.getCompileApiVersion();h.set("api_version",d),h.set("syscap",Array.from(_));const u=this.pathInfo.getIntermediatesSysCap();file_util_js_1.FileUtil.checkDirWithoutDelete(u);const f=path_1.default.resolve(u,common_const_js_1.CommonConst.RPCID_JSON);fs_extra_1.default.outputJsonSync(f,Object.fromEntries(h));const p={moduleName:this.moduleName,taskName:this.name,commandLine:[this.syscapTool,"-R","-e","-i",f,"-o",u]};new process_utils_js_1.ProcessUtils(p.moduleName,p.taskName).submitSyncExecutionWithoutReturn(this.getWorkerPool(),p,lodash_1.noop,[])}getRequireSysCapList(e,s,t){fs_1.default.readdirSync(e).forEach((o=>{if(o.toString().slice(0,o.toString().indexOf("."))===s){project_file_reader_js_1.ProjectFileReader.getJson5Obj(path_1.default.resolve(e,o.toString())).SysCaps.forEach((e=>{t.add(e)}))}}))}intersectNDeviceSysCap(e,s,t,o){if(void 0!==e){e.forEach((e=>{Object.keys(e).forEach((t=>{s.push(e[t])}))}));for(let e=0;e<s.length;e++)for(let i=0;i<s[e].length;i++)this.fieldRegExpCheck(s[e][i],"custom",t,o)}return new Set((0,lodash_1.intersection)(...s))}fieldRegExpCheck(e,s,t,o){if(!t.test(e)){const e=`Invalid value of '${s}' in the syscap.json file.`,i=`Correct the sysCaps in '${s}' based on the schema '${t}'.`;this._log._buildError(e)._solution(i)._file(o)._printErrorAndExit()}}addOrRemoveSyscapByProduction(e,s,t,o){const i=e.production;void 0!==i&&void 0!==i[o]&&0!==i[o].length&&i[o].forEach((e=>{switch(o){case common_const_js_1.CommonConst.ADDED_SYSCAPS:this.fieldRegExpCheck(e,common_const_js_1.CommonConst.ADDED_SYSCAPS,s,this.syscapJsonPath),t.add(e);break;case common_const_js_1.CommonConst.REMOVED_SYSCAPS:this.fieldRegExpCheck(e,common_const_js_1.CommonConst.REMOVED_SYSCAPS,s,this.syscapJsonPath),t.delete(e)}}))}}exports.AbstractSyscapTransform=AbstractSyscapTransform;