"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HosSdkInfoHandler=void 0;const hos_local_component_loader_1=require("../loader/hos-local-component-loader"),sdkmanager_common_1=require("@ohos/sdkmanager-common"),hos_remote_component_loader_1=require("../loader/hos-remote-component-loader"),hos_license_manager_1=require("../license/hos-license-manager"),hos_task_factory_1=require("../task/hos-task-factory");class HosSdkInfoHandler extends sdkmanager_common_1.CommonSdkInfoHandler{constructor(e,o=new sdkmanager_common_1.SimpleProgress){super(new sdkmanager_common_1.SdkInfoSettings(e)),this._progress=o,this._sdkInfoConfig=e}getOrDownload(e){const o=new hos_local_component_loader_1.HosLocalComponentLoader(this.sdkSettings.getLocation(),this._progress);return this.doGetOrDownload(e,this.mapComponents(o.load()),(e=>{if(this._getLocalIncompatibleSdks(o).includes(e.getPath()))throw new sdkmanager_common_1.SdkException("",new sdkmanager_common_1.ErrorTip("","The way the SDK is managed has changed.","Go to File > Settings > SDKs > HarmonyOS to handle the change"))}))}getLocalComponents(){return new hos_local_component_loader_1.HosLocalComponentLoader(this.sdkSettings.getLocation()).load()}getProgress(){return this._progress}getRemoteComponents(){return new hos_remote_component_loader_1.HosRemoteComponentLoader(this.sdkSettings,this.sdkSettings.getNetClient(),this._progress).load()}findUnacceptedLicenses(e){const o=e.map((e=>e.getLicense()));return new hos_license_manager_1.HosLicenseManager(this.sdkSettings,this.sdkSettings.getNetClient()).findUnacceptedLicenses(o,this._progress)}getLicenseNotAcceptedMessage(e){const o=e.join(",");return new sdkmanager_common_1.ErrorTip("","The HarmonyOS SDK license agreement is not accepted.",`Go to File > Settings > SDKs > HarmonyOS, download the ${o} SDK, and accept the license agreement.`)}createInstallComponentTask(e){return(0,hos_task_factory_1.createHosInstallTask)(e,this.sdkSettings,this.sdkSettings.getNetClient())}_getLocalIncompatibleSdks(e){return e.getInCompatibleComponents().map((e=>e.getPath()))}}exports.HosSdkInfoHandler=HosSdkInfoHandler;